@model Presentation.Models.JogadorViewModel

@{
    ViewData["Title"] = "Jogar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Jogar</h1>

<hr />
<div class="row">
    <div class="col-sm-6">
        @if (ViewBag.Error != null && !String.IsNullOrWhiteSpace(ViewBag.Error))
        {
            <label class="text-danger">@ViewBag.Error.ToString()</label>
        }
    </div>
</div>

<div class="row">
    <div class="col-md-4">
        <form asp-action="Jogar">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Nome" class="control-label"></label>
                <input asp-for="Nome" class="form-control" />
                <span asp-validation-for="Nome" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="email" class="control-label"></label>
                <input asp-for="email" class="form-control" />
                <span asp-validation-for="email" lang="pt-br" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Jogada" class="control-label"></label>
                <select asp-for="Jogada" asp-items="ViewBag.ListaJogadas" class="form-control"></select>
                <span asp-validation-for="Jogada" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Jogar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="~/js/jogadas.js"></script>